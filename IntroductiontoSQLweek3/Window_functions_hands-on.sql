/* BEFORE RUNNING THE QUERIES IN THIS FILE, MAKE SURE THE DATABASE 
   NAMED HR_DATA IS CREATED AND ALL THE TABLES ARE IMPORTED WITH THE NECESSARY DATA 
   USING THE SQL DUMP FILE GIVEN.*/
   
USE HR_DATA;
   
-- [1] IDENTIFY THE DETAILS OF EMPLOYEES WHO ARE PART OF DEPARTMENTS WITH MORE THAN 10 MEMBERS
--  (USE TABLES- EMPLOYEES AND DEPARTMENTS)

SELECT *
FROM (
	SELECT E.EMPLOYEE_ID
		,E.FIRST_NAME
		,D.DEPARTMENT_NAME
		,COUNT(*) OVER (PARTITION BY E.DEPARTMENT_ID) AS TOTAL_COUNT_DEPT
	FROM EMPLOYEES E
	INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	) AS TOTAL_COUNT
WHERE TOTAL_COUNT_DEPT > 10;

	
-- [2] FIND THE DETAILS OF EMPLOYEES AND THE THEIR DEPARTMENT NAMES WHOSE COMBINED SALARY OF THE DEPARTMENT IS LESS THAN 100000
-- (USE TABLES- EMPLOYEES AND DEPARTMENTS)

SELECT *
FROM (
	SELECT E.EMPLOYEE_ID
		,E.FIRST_NAME
		,D.DEPARTMENT_NAME
		,E.SALARY
		,SUM(SALARY) OVER (PARTITION BY E.DEPARTMENT_ID) AS TOTAL_DEPARTMENT_SALARY
	FROM EMPLOYEES E
	INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	) AS TOTAL_AMOUNT
WHERE TOTAL_DEPARTMENT_SALARY < 100000;


-- [3] FIND THE DETAILS OF EMPLOYEES AND THEIR DEPARTMENT NAMES WHOSE AVERAGE SALARY OF THE DEPARTMENT RANGES BETWEEN  5000 AND 8000.
--     (USE TABLES- EMPLOYEES AND DEPARTMENTS)

SELECT *
FROM (
	SELECT E.EMPLOYEE_ID
		,E.FIRST_NAME
		,D.DEPARTMENT_NAME
		,E.SALARY
		,AVG(SALARY) OVER (PARTITION BY E.DEPARTMENT_ID) AS AVERAGE_SALARY
	FROM EMPLOYEES E
	INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	) AS AVERAGE_DEPT
WHERE AVERAGE_SALARY BETWEEN 5000
		AND 8000;


-- [4] CREATE NEW EMPLOYEE ID'S STARTING WITH DEPARTMENT ID FOLLOWED BY NEW NUMBER 
--  (USE TABLES- EMPLOYEES)

SELECT EMPLOYEE_ID AS OLD_ID
	,FIRST_NAME
    ,DEPARTMENT_NAME
    ,SALARY
    ,CONCAT (
		DEPARTMENT_ID
		,'-'
		,ID
		) AS NEW_ID
FROM(SELECT E.EMPLOYEE_ID
	,E.FIRST_NAME
    ,D.DEPARTMENT_ID
	,D.DEPARTMENT_NAME
	,E.SALARY
	,ROW_NUMBER() OVER (PARTITION BY E.DEPARTMENT_ID) AS ID
FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID) AS TEMP;


-- [5]  FIND THE DETAILS OF TOP 3 SALARIES OF ALL THE EMPLOYEES IN EACH DEPARTMENT
--  (USE TABLES- EMPLOYEES & DEPARTMENTS)
SELECT *
FROM (
	SELECT E.EMPLOYEE_ID
		,E.FIRST_NAME
		,D.DEPARTMENT_NAME
		,E.SALARY
		,RANK() OVER (
			PARTITION BY D.DEPARTMENT_ID ORDER BY E.SALARY DESC
			) AS RNK
	FROM EMPLOYEES E
	INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	) AS SALARY_RANK
WHERE RNK <= 3;
    
    ##-------------------------USING DENSE RANK----------------------------##
    
SELECT *
FROM (
	SELECT E.EMPLOYEE_ID
		,E.FIRST_NAME
		,D.DEPARTMENT_NAME
		,E.SALARY
		,DENSE_RANK() OVER (
			PARTITION BY D.DEPARTMENT_ID ORDER BY E.SALARY DESC
			) AS DENSE_RNK
	FROM EMPLOYEES E
	INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	) AS SALARY_RANK
WHERE DENSE_RNK <= 3;


-- [6] ASSIGN ALL THE EMPLOYEES WORKING IN THE SHIPPING DEPARTMENT TO THREE DIFFERENT TEAMS 
-- (USE TABLE- EMPLOYEES, DEPARTMENTS)

SELECT EMPLOYEE_ID
	,FIRST_NAME
	,LAST_NAME
	,DEPARTMENT_NAME
	,NTILE(3) OVER (
		ORDER BY EMPLOYEE_ID
		) AS TEAMS
FROM (
	SELECT E.*
		,D.DEPARTMENT_NAME
	FROM EMPLOYEES E
	JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	WHERE D.DEPARTMENT_NAME = 'SHIPPING'
	) AS SHIPPING_DEPT;
    
    
-- [7] FIND THE NUMBER OF EMPLOYEES HIRED AND THE NUMBER OF EMPLOYEES FIRED EVERY MONTH
-- (USE TABLE- COMPANY_STRENGTH)

SELECT * FROM COMPANY_STRENGTH;

SELECT MONTH_YEAR AS DATE
	,COUNT_CURRENT_MONTH
    ,COUNT_PREVIOUS_MONTH
	,CASE 
		WHEN HIRED >= 0
			THEN HIRED
		ELSE 0
		END AS COUNT_OF_HIRED
	,CASE 
		WHEN HIRED < 0
			THEN HIRED * - 1
		ELSE 0
		END AS COUNT_OF_FIRED
FROM (
	SELECT MONTH_YEAR
		,EMPLOYEES AS COUNT_CURRENT_MONTH
		,LAG(EMPLOYEES) OVER (
			ORDER BY MONTH_YEAR
			) AS COUNT_PREVIOUS_MONTH
		,EMPLOYEES - LAG(EMPLOYEES) OVER (
			ORDER BY MONTH_YEAR
			) AS HIRED
	FROM COMPANY_STRENGTH
	) AS CS;


-- [8]  FETCH THE EMPLOYEE ID , FULL NAME, SALARY, DEPARTMENT NAME AND MINIMUM SALARY IN THEIR DEPARTMENT
-- (USE TABLE- EMPLOYEES, DEPARTMENTS)
  
SELECT EMPLOYEE_ID
	,CONCAT (
		E.FIRST_NAME
		,' '
		,E.LAST_NAME
		) AS FULLNAME
	,E.SALARY
    ,D.DEPARTMENT_NAME
	,FIRST_VALUE(SALARY) OVER (
		PARTITION BY D.DEPARTMENT_NAME ORDER BY E.SALARY
		) AS MIN_SALARY
FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID=D.DEPARTMENT_ID;

