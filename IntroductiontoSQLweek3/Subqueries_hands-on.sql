/* BEFORE RUNNING THE QUERIES IN THIS FILE, MAKE SURE THE DATABASE 
   NAMED HR_DATA IS CREATED AND ALL THE TABLES ARE IMPORTED WITH THE NECESSARY DATA 
   USING THE SQL DUMP FILE GIVEN.*/
   
   USE HR_DATA;
   
-- [1] WRITE A QUERY TO RETRIEVE THE DETAILS OF THE EMPLOYEES WHO WORK IN THE SALES DEPARTMENT
-- (USE TABLES- EMPLOYEES AND DEPARTMENTS)

-- FIRST, LET'S LOOK AT THE TABLES FOR EMPLOYEES AND DEPARTMENTS TO DETERMINE WHAT DATA WE NEED TO RETRIEVE.

SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;

-- LET'S NOW FIND THE SALES DEPARTMENT IDs.

SELECT DEPARTMENT_ID
FROM DEPARTMENTS
WHERE DEPARTMENT_NAME = 'Sales';

-- LET'S USE THE ABOVE AS A SUBQUERY TO FIND ALL THE SALES DEPARTMENT EMPLOYEES NOW.

SELECT *
FROM EMPLOYEES E
WHERE DEPARTMENT_ID = (
		SELECT DEPARTMENT_ID
		FROM DEPARTMENTS
		WHERE DEPARTMENT_NAME = 'Sales'
		);
                        
-- [2] WRITE A QUERY TO RETRIEVE WHICH DEPARTMENTS HAVE LESS THAN 10 EMPLOYEES.
--  GROUP THE RESULT SET ON CITY. RETURN CITY AND NUMBER OF DEPARTMENTS IN THAT CITY
-- (USE TABLES- DEPARTMENTS, LOCATIONS, EMPLOYEES)

-- LET'S LOOK AT LOCATIONS TABLE TO UNDERSTAND THE DATA  
SELECT * FROM LOCATIONS;

-- LET'S FIRST FIND THE DEPARTMENT ID's WHICH HAVE LESS THAN 10 EMPLOYEES

SELECT DEPARTMENT_ID
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING COUNT(DEPARTMENT_ID) < 10;
        
-- LET'S NOW USE THE AFOREMENTIONED QUERY AS A SUBQUERY TO IDENTIFY THE CITY AND THE NUMBER OF DEPARTMENTS IN THAT CITY 

SELECT L.CITY
	,COUNT(D.DEPARTMENT_ID) AS NO_OF_DEPARTMENTS
FROM LOCATIONS L
JOIN DEPARTMENTS D ON L.LOCATION_ID = D.LOCATION_ID
WHERE D.DEPARTMENT_ID IN (
		SELECT DEPARTMENT_ID
		FROM EMPLOYEES
		GROUP BY DEPARTMENT_ID
		HAVING COUNT(DEPARTMENT_ID) < 10
		)
GROUP BY CITY;
    
-- [3] WRITE SQL QUERY TO FETCH DETAILS OF EMPLOYEES WHOSE SALARY FALLS WITHIN THE RANGE OF AVERAGE SALARY AND 15000
-- (USE TABLE- EMPLOYEES)

-- LET'S FIRST FIND THE AVERAGE SALARY OF ALL EMPLOYEES

SELECT AVG(SALARY) 
FROM EMPLOYEES;

-- NOW, LET'S USE THE ABOVE AS THE SUBQUERY TO FIND THE EMPLOYEES WITH SALARY RANGING WITHIN THE AVERAGE SALARY AND 15000

SELECT EMPLOYEE_ID, CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY BETWEEN (
				SELECT AVG(SALARY)
				FROM EMPLOYEES
				)
		AND 15000
ORDER BY SALARY;
    
-- [4] 	FETCH THE DETAILS OF EMPLOYEES WHO GET SECOND HIGHEST SALARY
-- (USE TABLE - EMPLOYEES)

-- LET'S FIRST FIND THE HIGHEST SALARY

SELECT MAX(SALARY) AS HIGHEST_SALARY
FROM EMPLOYEES;

-- NOW, LET'S USE THE ABOVE AS THE NESTED QUERY TO FIND THE SECOND HIGHEST SALARY

SELECT MAX(SALARY) AS SECOND_HIGHEST_SALARY
FROM EMPLOYEES
WHERE SALARY < (
		SELECT MAX(SALARY)
		FROM EMPLOYEES
		);
		
-- NOW, LET'S USE THE ABOVE SUBQUERY TO FIND THE EMPLOYEES WHO HAVE THE SECOND HIGHEST SALARY.

SELECT *
FROM EMPLOYEES
WHERE SALARY = (
		SELECT MAX(SALARY)
		FROM EMPLOYEES
		WHERE SALARY < (
				SELECT MAX(SALARY)
				FROM EMPLOYEES
				)
		);
        
       
-- [5] WRITE A QUERY TO DISPLAY THE NUMBER OF EMPLOYEES IN EACH SALARY BRACKET,
--     SHOW SALARY BRACKET OF EMPLOYEES AS PER BELOW CONDITIONS:
--           i) IF EMPLOYEE SALARY IS GREATER THAN OR EQUAL TO 15000 THEN 'TIER 1'
-- 			ii) IF EMPLOYEE SALARY IS BETWEEN 6500 AND 15000 THEN 'TIER 2'
--         iii) IF EMPLOYEE SALARY IS LESSER THAN OR EQUAL TO 6500 THEN 'TIER 3'

-- LET'S FIRST SET EACH EMPLOYEE'S SALARY BRACKET

SELECT EMPLOYEE_ID
	,SALARY
	,CASE 
		WHEN SALARY >= 15000
			THEN 'TIER 1'
		WHEN SALARY BETWEEN 6500
				AND 15000
			THEN 'TIER 2'
		WHEN SALARY <= 6500
			THEN 'TIER 3'
		ELSE SALARY
		END AS SALARY_BRACKET
FROM EMPLOYEES;

-- NOW, LET'S USE THE ABOVE SUBQUERY TO FIND THE NUMBER OF EMPLOYEES IN EACH SALARY BRACKET.

SELECT SALARY_BRACKET
	,COUNT(SALARY_BRACKET) AS COUNT_OF_EMPLOYEES
FROM (
	SELECT EMPLOYEE_ID
		,SALARY
		,CASE 
			WHEN SALARY >= 15000
				THEN 'TIER 1'
			WHEN SALARY BETWEEN 6500
					AND 15000
				THEN 'TIER 2'
			WHEN SALARY <= 6500
				THEN 'TIER 3'
			ELSE SALARY
			END AS SALARY_BRACKET
	FROM EMPLOYEES
	) AS S
GROUP BY SALARY_BRACKET;


-- [6] WRITE A QUERY TO FIND THE DETAILS OF ALL THE MANAGERS BY RETURNING MANAGER_ID, MANAGER_NAME, SALARY 
-- AND THE SALARY BRACKET IN ACCORDANCE WITH THE CONDITIONS BELOW:
--           i) IF EMPLOYEE SALARY IS GREATER THAN OR EQUAL TO 15000 THEN 'TIER 1'
-- 			ii) IF EMPLOYEE SALARY IS BETWEEN 6500 AND 15000 THEN 'TIER 2'
--         iii) IF EMPLOYEE SALARY IS LESSER THAN OR EQUAL TO 6500 THEN 'TIER 3'

-- LET'S FIND ALL THE MANAGER_IDs FIRST

SELECT DISTINCT MANAGER_ID
FROM EMPLOYEES;

-- NOW, LET'S USE THE ABOVE SUBQUERY TO FIND THE MANAGER_ID, MANAGER_NAME AND THEIR SALARIES

SELECT EMPLOYEE_ID AS MANAGER_ID
	,CONCAT (
		FIRST_NAME
		,' '
		,LAST_NAME
		) AS MANAGER_NAME
	,SALARY
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (
		SELECT DISTINCT MANAGER_ID
		FROM EMPLOYEES
		);

-- NOW, LET'S ASSIGN SALARY BRACKETS TO ALL THE EMPLOYEES IN ACCORDANCE WITH TH EGIVEN CONDITIONS

SELECT EMPLOYEE_ID
	,SALARY
	,CASE 
		WHEN SALARY >= 15000
			THEN 'TIER 1'
		WHEN SALARY BETWEEN 6500
				AND 15000
			THEN 'TIER 2'
		WHEN SALARY <= 6500
			THEN 'TIER 3'
		ELSE SALARY
		END AS SALARY_BRACKET
FROM EMPLOYEES;

-- NOW WE USE THE AFOREMENTIONED SUBQUERIES TO FIND THE REQUIRED MANAGER INFORMATION ALONG WITH THEIR SALARY BRACKET

SELECT M.MANAGER_ID
	,M.MANAGER_NAME
	,M.SALARY
	,S.SALARY_BRACKET
FROM (
	SELECT EMPLOYEE_ID AS MANAGER_ID
		,CONCAT (
			FIRST_NAME
			,' '
			,LAST_NAME
			) AS MANAGER_NAME
		,SALARY
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID IN (
			SELECT DISTINCT MANAGER_ID
			FROM EMPLOYEES
			)
	) AS M
JOIN (
	SELECT EMPLOYEE_ID
		,SALARY
		,CASE 
			WHEN SALARY >= 15000
				THEN 'TIER 1'
			WHEN SALARY BETWEEN 6500
					AND 15000
				THEN 'TIER 2'
			WHEN SALARY <= 6500
				THEN 'TIER 3'
			ELSE SALARY
			END AS SALARY_BRACKET
	FROM EMPLOYEES
	) AS S ON M.MANAGER_ID = S.EMPLOYEE_ID;
	
--          ************************** USING CTE *********************************

-- WITH CTE AS (QUERY)

WITH CTE1
AS (
	SELECT EMPLOYEE_ID AS MANAGER_ID
		,CONCAT (
			FIRST_NAME
			,' '
			,LAST_NAME
			) AS MANAGER_NAME
		,SALARY
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID IN (
			SELECT DISTINCT MANAGER_ID
			FROM EMPLOYEES
			)
	)
	,CTE2
AS (
	SELECT EMPLOYEE_ID
		,SALARY
		,CASE 
			WHEN SALARY >= 15000
				THEN 'TIER 1'
			WHEN SALARY BETWEEN 6500
					AND 15000
				THEN 'TIER 2'
			WHEN SALARY <= 6500
				THEN 'TIER 3'
			ELSE SALARY
			END AS SALARY_BRACKET
	FROM EMPLOYEES
	)
SELECT CTE1.MANAGER_ID
	,CTE1.MANAGER_NAME
	,CTE1.SALARY
	,CTE2.SALARY_BRACKET
FROM CTE1
JOIN CTE2 ON CTE1.MANAGER_ID = CTE2.EMPLOYEE_ID;
        
            