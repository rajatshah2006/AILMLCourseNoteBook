/* BEFORE RUNNING THE QUERIES IN THIS FILE, MAKE SURE THE DATABASE NAMED 
   hr_data IS CREATED AND ALL THE TABLES ARE IMPORTED WITH THE NECESSARY DATA 
   USING THE SQL DUMP FILE GIVEN.*/

USE hr_data;

-- FIRST, LET'S LOOK AT THE TABLES FOR EMPLOYEES AND DEPARTMENTS TO DETERMINE WHAT DATA WE NEED TO RETRIEVE
-- CHECK FOR ANY DUPLICATES

SELECT * FROM EMPLOYEES;
SELECT COUNT(EMPLOYEE_ID) FROM EMPLOYEES  GROUP BY EMPLOYEE_ID HAVING COUNT(EMPLOYEE_ID)>1 ;

SELECT * FROM DEPARTMENTS;
SELECT COUNT(DEPARTMENT_ID) FROM DEPARTMENTS GROUP BY DEPARTMENT_ID HAVING COUNT(DEPARTMENT_ID)>1;

-- [1] FIND THE DETAILS OF EMPLOYEES WORKING IN THE IT & SHIPPING DEPARTMENT.
-- (USE EMPLOYEES & DEPARTMENTS )

SELECT E.EMPLOYEE_ID
	,UPPER(E.FIRST_NAME) AS FIRST_NAME -- UPPER() CONVERTS THE STRING TO UPPER CASE.
	,UPPER(E.LAST_NAME) AS LAST_NAME -- LOWER() CONVERTS THE STRING TO LOWER CASE.
	,E.DEPARTMENT_ID
	,E.SALARY
	,D.DEPARTMENT_NAME
FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE D.DEPARTMENT_NAME IN ('IT','SHIPPING')
ORDER BY E.EMPLOYEE_ID;


-- [2] FIND THE NUMBER OF EMPLOYEES WORKING IN EACH DEPARTMENT, AS WELL AS THEIR AVERAGE SALARY.
-- (USE TABLES - EMPLOYEES, DEPARTMENTS)

SELECT D.DEPARTMENT_ID
	,D.DEPARTMENT_NAME
    ,COUNT(E.EMPLOYEE_ID) NUMBER_OF_EMPLOYEES
 	,AVG (E.SALARY) AVERAGE_SALARY
FROM DEPARTMENTS D
LEFT JOIN EMPLOYEES E ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_ID, D.DEPARTMENT_NAME;


-- [3] WRITE A SQL QUERY TO FIND ALL DEPARTMENTS, INCLUDING THOSE WITHOUT EMPLOYEES RETURN EMPLOYEE ID, 
-- FULLNAME, DEPARTMENT ID, DEPARTMENT NAME
-- (USE TABLES - EMPLOYEES, DEPARTMENTS)

SELECT E.EMPLOYEE_ID
	,CONCAT (
		E.FIRST_NAME
		,' '
		,E.LAST_NAME
		) AS FULLNAME
	,D.DEPARTMENT_ID
	,D.DEPARTMENT_NAME
FROM EMPLOYEES E
RIGHT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.EMPLOYEE_ID IS NULL;


-- [4] FIND THE DETAILS OF EMPLOYEES WITH SALARY GREATER THAN 10000 ALONG WITH THEIR MANAGER'S FULLNAME   
-- (USE TABLE EMPLOYEES)

SELECT E.EMPLOYEE_ID
	,CONCAT (
		E.FIRST_NAME
        ,' '
		,E.LAST_NAME
		) AS EMPLOYEE
	,E.SALARY EMPLOYEE_SALARY
	,CONCAT (
		M.FIRST_NAME
		,' '
		,M.LAST_NAME
		) AS MANAGER
FROM EMPLOYEES E
JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID
WHERE E.SALARY > 10000;


-- [5] FIND ALL THE COLUMNS AND ROWS FROM BOTH EMPLOYEES AND DEPARTMENTS.
-- MySQL DOES NOT SUPPORT FULL OUTER JOIN DIRECTLY INSTEAD IT IS DONE BY USING THE UNION CLAUSE

SELECT *
FROM EMPLOYEES E
LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID

UNION

SELECT *
FROM EMPLOYEES E
RIGHT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;


-- [6] FIND THE DETAILS OF EMPLOYEES IN SEATTLE WITH THEIR DEPARTMENT NAME ALONG WITH THE TOTAL AMOUNT OF SALARY IN THAT DEPARTMENT 
-- JOINING MORE THAN 2 TABLES (USE TABLES- EMPLOYEES, DEPARTMENTS, LOCATIONS)

SELECT * FROM LOCATIONS;

SELECT E.EMPLOYEE_ID
	,CONCAT (
		E.FIRST_NAME
		,' '
		,E.LAST_NAME
		) AS FULLNAME
	,D.DEPARTMENT_NAME
	,SUM(E.SALARY) AS TOTAL_SALARY
	,E.SALARY
	,L.CITY
	,L.STATE_PROVINCE
FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
INNER JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
WHERE L.CITY = 'Seattle'
GROUP BY D.DEPARTMENT_NAME
ORDER BY TOTAL_SALARY DESC;
























